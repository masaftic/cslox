/*
// print 3 + 3;
/*var a = 4;
while*/ (a >= 4) {
	print a + 1; 
}
*/
for (var a = 0; a <= 10; a = a + 1) {

}


/*

using System;
namespace cslox
{
    public abstract class Expr
    {
        public abstract R Accept<R>(Visitor<R> visitor);
    }

    public interface Visitor<R>
    {
        R VisitBinaryExpr(Binary binary);
        // Add other Visit methods for different expression types.
    }

    public class Binary : Expr
    {
        public Binary(Expr left, Token oper, Expr right)
        {
            this.left = left;
            this.oper = oper;
            this.right = right;
        }

        public override R Accept<R>(Visitor<R> visitor)
        {
            return visitor.VisitBinaryExpr(this);
        }

        public readonly Expr left;
        public readonly Token oper;
        public readonly Expr right;
    }

    
}


*/

